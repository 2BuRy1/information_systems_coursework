#import "./functions.typst": lines


#set page(margin: 2.5cm)
#set text(lang: "ru", font: "Times New Roman", size: 14pt)
#set page(numbering: none)

#align(center,  [
  #block[
    Федеральное государственное автономное образовательное учреждение высшего образования
    «*Национальный исследовательский университет ИТМО*»

    Факультет Программной Инженерии и Компьютерной Техники
  ]

  #v(48mm)

  #block[
    Создание информационной системы для проведения совместных сессий по написанию кода “*CodeTogether*”

    по дисциплине «Информационные системы»
  ]

  #v(0.6fr)

  #grid(
    columns: (2fr, 2fr),
    column-gutter: 2cm,

      [],
      [
        *Преподаватель:* \
        Тюрин Иван Николаевич \
        #v(2mm)
        *Выполнил:* \
        Федоров Евгений Константинович \
        Бондаренко Артем Андреевич \
        #v(2mm)
        *Группа:* P3310
      ]

  )

  #v(10mm)

  Санкт-Петербург 2025

])
#pagebreak()
#set page(numbering: "1")

#outline(
  indent: 2em,
)

#set heading(numbering: "1.")


= Задание

== Согласовать с преподавателем предметную область, для которой будет разрабатываться информационная система.
\
Согласована во время практического занятия.

== Составить подробное текстовое описание предметной области.
\
CodeTogether - это онлайн платформа для совместного написания и
редактирования кода в режиме реального времени.
Она позволяет пользователям видеть вносимые изменения,
что представляется особенно удобным для обучения и/или проведения интервью.
Основные элементы приложения включают в себя редактор кода с
подсветкой синтаксиса, возможность приглашать неограниченное
количество участников и взаимодействие между пользователями
в лице просмотра положения курсора каждого участника. Одним из аспектов является
постановка и выполнение совместных задач, просмотр статистики каждого пользователя в рамках рабочей сессии.
\

#pagebreak()
== Сформулировать, зачем нужна информационная система для представленной предметной области, какие задачи она позволит решить.
\
Информационная система для предметной области
CodeTogether нужна для того, чтобы организовать и упростить процесс
совместного написания кода в режиме реального времени,
обеспечив удобное взаимодействие участников независимо от их местоположения.

система позволяет решать следующие задачи:
-	совместная разработка кода
  -	Пользователи могут подключаться к «доске» и
    совместно писать код с подсветкой синтаксиса выбранного языка.

-	поддержка обучения и наставничества
  - Система позволяет проводить совместные занятия и семинары с
    демонстрацией синтаксических особенностей выбранного языка.

- подготовка и проведение технических интервью
  - Cистема позволяет проводить технические интервью для проверки знания синтаксиса языка,
    а также возможности человека писать без помощи ide.

-	улучшение командной работы
  - Система позволяет улучшить командную работу при
    помощи совместной разработки необходимых функций,
    написания их шаблонов в быстром и удобном формате.

- постановка и решение задач
  - Система позволяет создать панель задач
    для отслеживания прогресса проведения семинара, выполнения задачи.


#pagebreak()

== Составить функциональные/нефункциональные требования к разрабатываемой информационной системе.


#set heading(numbering: none)
=== Функциональные требования

==== Для обычного пользователя
#let f_reqs = (
"Система должна предоставлять пользователям возможность зарегистрировать аккаунт посредством формы",
"Система должна предоставлять пользователям возможность зарегистрировать аккаунт посредством GitHub",
"Система должна предоставлять пользователям возможность создать новую доску",
"Система должна предоставлять пользователям возможность одновременно редактировать текстовый файл ",
"Система должна предоставлять возможность выбрать используемой доской язык для подсветки синтаксиса",
"Система должна предоставлять возможность создать задачу для доски",
"Система должна предоставлять возможность просмотреть статистику каждого пользователя на доске",
"Система должна предоставлять возможность выдать роль на доске для пользователя",
"Система должна предоставлять возможность пользователю выбрать свой аватар из каталога",
"Система должна предоставлять возможность пригласить участника на доску",


)

#let sec_reqs = (


  "Система должна предоставлять пользователю возможность сменить свой пароль для входа",
  "Система должна хешировать пароль методом bcrypt"



)



#lines("F", f_reqs)
#lines("SEC", sec_reqs)


#pagebreak()

==== Для владельцев досок


#let f_req_new = (
  "Система должна предоставлять возможность редактировать название доски",
  "Система должна предоставлять возможность удалить доску",
  "Система должна предоставлять возможность удалить участника с доски",
  "Система должна предоставлять возможность изменить роль участника на доске",
  "Система должна предоставлять возможность добавить задачи для доски",
  "Система должна предоставлять возможность удалять задачи для доски"


)


#lines("F", f_req_new, start: f_reqs.len())



==== Для анонимных пользователей

#let observer_req =(

  "Система должна предоставить возможность просматривать доску, если у них есть ссылка на неё.",
  "Система должна ограничивать доступ на редактирование досок анонимным пользователям."
)


#lines("F", observer_req, start: f_req_new.len())


=== Нефункциональные требования

==== Удобство использования
#let nfr_usability = (
  "Система должна корректно отображаться в браузерах: Chrome 21+, Safari 16+, Firefox 122+, Яндекс.Браузер 23+",
  "Система должна обеспечивать навигацию и поиск нужного элемента не более чем за 30 секунд",
  "Система должна иметь светлую цветовую схему (молочные тона) без резких контрастов",
)
#lines("U", nfr_usability)

==== Производительность
#let nfr_perf = (
  "Система должна предоставить время загрузки главной страницы — не более 15 секунд при стабильном соединении 15 Мбит/с",
  "Система должна предоставить время открытия новой доски — не более 10 секунд при тех же условиях",
  "Система должна поддерживать одновременную работу не менее 15 активных пользователей на одной доске",
  "Система должна предоставить сохранение автоснапшота документа — не более 1 секунды на операцию",
  "Система должна гарантировать обработку операций редактирования — P95 ≤ 200 мс"
)
#lines("P", nfr_perf)

==== Поддерживаемость
#let nfr_maint = (
  "Система должна логировать ошибки и предупреждения с уровнями (ERROR/WARN/INFO) ",
  "Система должна поддерживать конфигурацию через переменные окружения (DB url, креды, OAuth client-id/secret и т.д.)",
  "Система должна поддерживать ротацию секретов (обновление client secret и ключей подписи токенов) без простоя",
)
#lines("M", nfr_maint)

==== Надёжность
#let nfr_reliab = (
  "Система должна выполнять автосохранение изменений на доске каждые 5 секунд либо по инициативе пользователя",
  "Система должна предоставить восстановление доступа к сессии без потери данных при сетевой ошибке",
  "Система должна обеспечивать идемпотентность при повторной доставке событий редактирования",
)
#lines("R", nfr_reliab)
